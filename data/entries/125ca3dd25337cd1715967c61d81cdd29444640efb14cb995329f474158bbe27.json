{"title":"A personal API","link":"https://blog.webb.page/2019-12-02-a-personal-api.txt","date":1575244800000,"content":"<h2>Inspiration</h2>\n<p>Shortly after revisiting<a href=\"/2019-06-09-future-of-the-operating-system-revisited-i.txt\">1</a> my thoughts about the future of operating systems\nI was pestered with a recurring thought; what if one had a personal API\nsitting on a $5/month VPS (virtual private server) and interfaced with it for\nnearly everything they do online? It wasn't far-fetched for me to then imagine\nthis personal API becoming more of a personal OS in a way (or maybe stylized,\npersonalOS). With that in mind I realized that when thinking about updating\nmy personal web page<a href=\"https://webb.page\">2</a> I didn't want to update the content manually. Rather,\nI'd want to update an API and have my site(s) automatically update. <em>Oh yeah</em>,\nwhy NOT have multiple sites update?</p>\n<p>A personal API would make it easy for people to decentralize parts of their\ndigital lives. There are companies built upon the concept of decentralization\nand that's promising. A rising tide raises all ships, as they say, and I can\nsee a day where non-technical people are spinning up servers as much as\nthey're migrating data to a new smartphone (well, if they did all this via a\nnice UI).</p>\n<h2>Use Cases</h2>\n<p>Here's a use case: I'm signed up to several social networks, forums, and I\nhave a couple websites. I'm a digital tastemaker and pride myself on being\ncurrent and relevant. However, updating my account bio across these platforms\nis a 20-minute task that I dread doing. Never fear for my API has a biography\nmodule! Realistically, all the platforms I frequent won't have an API I can\nconnect my own to, but a handful will. My personal API sends out update\nrequests to the platforms it is connected to and updates my bio section when I\npublish the relevant changes to my API.</p>\n<p>That example may be a little contrived so let's try another one: I'm a\ndeveloper who prefers to self-host things whenever possible. I am also quite\nlazy and live by DRY (don't repeat yourself) and KISS (keep it simple, silly)\nprinciples to the extent I can without much difficulty. I'm also fatigued and\ndistrustful of the capability of online services in general to keep my data\nsafe. If I trust nothing else I at least trust myself and a code base I can\nperuse.</p>\n<h2>Version Alpha</h2>\n<p><em>Please keep in mind that this is still a super early idea and the purpose of\nthis post is to get the particulars fleshed out.</em></p>\n<p>What follows is my proposed folder structure of the personal API. Modules come\nin two types: purpose and utility. Utility modules allow the purpose modules\nto do their thing, like retrieving/modifying/storing data (on DigitalOcean's\nSpaces, Amazon's S3, or your own storage location). Ideally you should never\nhave to touch those modules unless you wanted to improve upon it or fork your\nown version. Purpose modules can be anything you think of and the examples I\nlisted could be your personal Medium, Pinboard/Pinterest, Things, Spotify,\nFlickr/Instagram, Last.fm, and so on.</p>\n<pre><code>api\nâ”œâ”€ â€¦\nâ”œâ”€ modules\nâ”‚  â”œâ”€ purpose\nâ”‚  â”‚  â”œâ”€ blog\nâ”‚  â”‚  â”œâ”€ bookmarks\nâ”‚  â”‚  â”œâ”€ music\nâ”‚  â”‚  â”œâ”€ photos\nâ”‚  â”‚  â”œâ”€ portfolio\nâ”‚  â”‚  â”œâ”€ reminders\nâ”‚  â”‚  â”œâ”€ scrobbler\nâ”‚  â”‚  â””â”€ status\nâ”‚  â””â”€ utility\nâ”‚     â”œâ”€ database\nâ”‚     â””â”€ storage\nâ””â”€ â€¦\n</code></pre>\n<p>The purpose functions would be able to call the utility functions to, well,\nfunction. <code>webb.page</code> will be the guinea pig for the initial release of\npersonalOS. Once it works there I will update parts of <code>inc.sh</code> and\n<code>dsgn.agency</code> to take advantage of it as well.</p>\n<h2>Why Bother?</h2>\n<p>You, dear reader, are probably not terribly interested in self-hosting and dev\nops. Even developers/engineers who know HOW to do it aren't interested. Some\nof the common reasons against self-hosting are fear (of the work involved),\napathy (\"my data isn't super important anyway\"), time (the only valid reason\nIMHO), or a combination of the three. While I understand I also think <em>it is\nincredibly important to claim your space on the Internet</em>. We're all digital\nsharecroppers<a href=\"https://info.ideagrove.com/knowledgebase/digital-marketing/what-is-digital-sharecropping-and-why-is-it-a-bad-thing\">3</a> so why not tend to our own space on the 'Net?</p>\n<p>It's a helluva lot easier to monetize your content when it lives on your\nplatform, or personalOS in this case. Monetization doesn't have to be your\nfocus though. How about this: something that irritates me about Apple's Music\napp and iOS 13 is that I have no idea how to get my music that used to live in\niTunes, onto my phone anymore. Once I build a music module for personalOS I\ncan upload my music library to my own server and stream it on the go. The\nmajor streaming services are great and all but my music collection has rips\nfrom video game soundtracks, anime, and otherwise defunct groups with no\ncontent on these streaming services. Why would I give that up?\nWhy <em>should</em> I?!</p>\n<h2>Business Opportunity?</h2>\n<p>Y'know what would be nice? Having an easy way to share any files that you're\nhosting. Although, you may not want to expose your personal API server to the\npublic. For this purpose, you could use a third-party site like <code>personal.sh</code>\nto generate shareable links (probably via <code>personal.sh/are</code>, I'm a fan of\ndomain hacking<a href=\"https://en.wikipedia.org/wiki/Domain_hack\">4</a>).</p>\n<p>Because the Internet is open to all, there will inevitably be\ndisturbing/disgusting/morally-bankrupt content shared through <code>personal.sh</code>.\nIf/when that happens, the offending user will have their IP address\nblacklisted and put on display at <code>personal.sh/it</code>. It's no secret that\nanonymity gives some people courage to behave in a way that's unbecoming.</p>\n<h2>Prior Art</h2>\n<p>There's a company named Urbit whose mission is quite similar:</p>\n<blockquote>\n<p>An Urbit is a networked personal server that runs your apps and stores your\ndata, serves as your permanent online identity and puts you back in control\nof your digital life under a single login.</p>\n<p>When youâ€™re ready.\nâ€” urbit live<a href=\"https://twitter.com/urbitlive/status/1192262246384230400\">5</a></p>\n</blockquote>\n<p>Only problem is, their official site makes their mission quite confusing<a href=\"https://news.ycombinator.com/item?id=18908051\">7</a> to\nmany<a href=\"https://news.ycombinator.com/item?id=6438320\">8</a>. I don't know about you but if I'm entrusting my data to something I\nrun, I want to have more than a <em>general idea</em> of how it works.</p>\n<p><em>EDIT (2019.12.05):</em> This post has generated lively discussion on\nHackerNews<a href=\"https://news.ycombinator.com/item?id=21684949\">9</a> and as a result we now have more examples of prior art!</p>\n<ul>\n<li>cjdns<a href=\"https://github.com/cjdelisle/cjdns\">10</a></li>\n<li>Dogsheep<a href=\"https://dogsheep.github.io\">11</a>, by Simon Willisons</li>\n<li>Islet<a href=\"https://www.infoq.com/presentations/strong-types-actor-iot\">12</a>, by Carl Hewitt</li>\n<li>libp2p<a href=\"https://libp2p.io\">13</a></li>\n<li>me-api<a href=\"https://github.com/danfang/me-api\">14</a>, by Daniel Fang</li>\n<li>my<a href=\"https://github.com/karlicoss/my\">15</a>, by Dmitrii Gerasimov</li>\n<li>Perkeep<a href=\"https://perkeep.org\">16</a></li>\n<li>SOLID (Social Linked Data)<a href=\"https://solid.mit.edu\">17</a>, by Tim Berners-Lee</li>\n<li>Syte2<a href=\"https://github.com/rigoneri/Syte2\">18</a> / Syte2 for Zeit Now v2<a href=\"https://github.com/jake-101/Syte2-4-Zeit2.0\">19</a>, by Rodrigo Neri and Jake Peterson</li>\n<li>Unwalled Garden<a href=\"https://unwalled.garden\">20</a></li>\n<li>Yggdrasil Network<a href=\"https://github.com/yggdrasil-network/yggdrasil-go\">21</a></li>\n</ul>\n<h2>FIN</h2>\n<p>Elsewhere, there exists portions of the personalOS concept of various\ndevelopment maturation levels. To me, this is proof of the worthwhile nature\nof this idea. Will this likely end up sitting in a repo for years after months\nof initial work? Probably. Hopefully notâ€¦we'll see how it goes. ðŸ•¸</p>\n<hr />\n","author":"","siteTitle":"the webb blog","siteHash":"d87386c8de21b16d23a4d22ceb0991728c5b4e4486d627490c6fcde14e563300","entryHash":"125ca3dd25337cd1715967c61d81cdd29444640efb14cb995329f474158bbe27","category":"Sites"}