{"title":"The language of developers","link":"http://scripting.com/2024/03/30/183529.html?title=theLanguageOfDevelopers","date":1711823729000,"content":"<p>I loved hanging out with fellow math and compsci majors in college and grad school. It's nice when you get to speak in the language of math and programming, where you can't be fuzzy about things, you have to be direct, because it's the only way to communicate. </p>\n<p>No one attaches their feelings to the things other people say in this context. But sometimes it hurts anyway. I think I've told this story many times. I had posted some example code on the door to the office I shared with a few other teaching assistants at UW in the late 70s, and there was a mistake in it. It wouldn't have compiled if I had tried to run it. I was told by a TA who was senior to me, never to do this again. It stung for an instant, but I recall suppressing that and accepting that the OP was absolutely right. I should never have to learn this lesson again, and as far as I know, many years have passed and I have never have had to re-learn that one (though I have with many others). </p>\n<p>But nothing prepared me for the experience in 1981 or so when the company I was working with hired a professional tester to report on the software. Page after page of my mistakes. Written in cold dispassionate unyielding text, with no concern for anyone's feelings. A since I was the lead developer on this project, the feelings were pretty much all mine. <i>But</i> the concerns were valid. Some of the things were the result of confusion about how the product worked, and others were outright mistakes. All of them were my responsibility.</p>\n<p>Anyway, many many years later, if you work with me on a project, I expect you to report problems with my code that way. Don't beat around the bush. I've been through this a million times. It still stings sometimes, but I recover very quickly, because my mission is to make flawless software, a feeling that the \"software thinks like I do\" that only comes from addressing all the issues you can. No software is ever anything close to perfect. But we love to make it more perfect. This is the ethos of developers, and why our conversations sound so weird to others. </p>","author":"","siteTitle":"Scripting News","siteHash":"d6ad59631287cc248e52fdfe0c4f962c0fd08643d455b40f799700d8b2f97c65","entryHash":"61d20f1a6808bb20b17933f4c779d661f1446c89441b750fd763b7f61a586534","category":"default"}