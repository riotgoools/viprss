{"title":"Database triggers to clean text inputs","link":"https://sive.rs/clean1","date":1646092800000,"content":"<p>\nEven smart people can accidently put bad data into a database.\n</p><p>\nWe copy text from a web page, then paste it into a form, not realizing it also copied a space, tab, or newline character.\nThen your system thinks someone’s name is not “Jim” but “ Jim\\n”.\n</p><p>\nYou could use JavaScript to sanitize all form inputs, but what about when you import a CSV file, or get data from an API?\n</p><p>\nNo, <strong>the best place for your data-cleaning functions is in the database itself</strong>.\nSo no matter what code is inserting or updating, a database trigger will sanitize it <strong>before saving</strong>.\n</p><p>\nHere’s a PostgreSQL example.\nLet’s make two tables, people and emails, so you can see how one function can be used by many triggers.\n</p>\n<div>\n<pre><code>create table people (\n  id serial primary key,\n  name text,\n  code text\n);\n\ncreate table emails (\n  id serial primary key,\n  person_id integer not null references people(id),\n  email text\n);\n</code></pre><small><a href=\"https://sive.rs/code/clean1-1.sql\">download code</a></small>\n</div>\n<p>\nLet’s make two simple functions:\n</p><ol><li>\nRemove all whitespace, then lowercase.\n</li><li>\nRemove unwanted whitespace characters like tab and newline.\nReplace them all with a single space.\nThen trim spaces from the front and end.\n</li></ol>\n<div>\n<pre><code>-- remove all whitespace, then lowercase it\ncreate function lower_no_space(text) returns text as $$\n  select lower(regexp_replace($1, '\\s', '', 'g'));\n$$ language sql;\n\n-- replace all whitespace with single space, then trim start and end\ncreate function no_extra_space(text) returns text as $$\n  select btrim(regexp_replace($1, '\\s+', ' ', 'g'));\n$$ language sql;\n</code></pre><small><a href=\"https://sive.rs/code/clean1-2.sql\">download code</a></small>\n</div>\n<p>\nThe function that removes all whitespace then lowercases, is good for email addresses and codes like checksums.\n</p><p>\nThe function that removes extra whitespace then trims, is good for many things like names, addresses, email subjects, and anywhere that needs to retain inner spaces.\nSo “ New \\t Zealand \\n” will be “New Zealand”.\n</p><p>\nNow make trigger functions that use your smaller re-usable cleaning functions.\nI find it best to make one trigger per table, sanitizing all fields on any insert or update.\n</p>\n<div>\n<pre><code>create function clean_people() returns trigger as $$\nbegin\n  new.name = no_extra_space(new.name);\n  new.code = lower_no_space(new.code);\n  return new;\nend;\n$$ language plpgsql;\ncreate trigger clean_people\nbefore insert or update on people\nfor each row execute procedure clean_people();\n\ncreate function clean_emails() returns trigger as $$\nbegin\n  new.email = lower_no_space(new.email);\n  return new;\nend;\n$$ language plpgsql;\ncreate trigger clean_emails\nbefore insert or update on emails\nfor each row execute procedure clean_emails();\n</code></pre><small><a href=\"https://sive.rs/code/clean1-3.sql\">download code</a></small>\n</div>\n<p>\nThe language is a little verbose, but oh well.\nThe ugliness of the boilerplate code is made up for by the beautiful simplicity of having all of this handled in the database.\nIt’s so nice to not have to sanitize form fields!\nJust toss the unwashed inputs at the database.\n</p><p>\nHere, let’s give it some dirty data, and watch it come out clean.\n</p>\n<div>\n<pre><code>insert into people (name, code) values (e' \\t \\r \\n Dr.  \\n \\r JM \\t Lim \\r\\n', '   XX o Z ') returning *;\n-- id │    name    │ code \n--────┼────────────┼──────\n--  1 │ Dr. JM Lim │ xxoz\n\ninsert into emails (person_id, email) values (1, e' \\r\\n \\t DR. L @ JM Lim . com \\n') returning *;\n-- id │ person_id │     email      \n--────┼───────────┼────────────────\n--  1 │         1 │ dr.l@jmlim.com\n</code></pre><small><a href=\"https://sive.rs/code/clean1-4.sql\">download code</a></small>\n</div>\n<p>\nThis approach has made my code much simpler, and data much cleaner.\n</p><p>\nDownload the full code example at <a href=\"https://sive.rs/code/clean1.sql\">/code/clean1.sql</a>.\n</p><p>\nAlso look at <a href=\"https://sive.rs/recalc\">using triggers to ensure data integrity</a>.\n</p>\n","author":"Derek Sivers","siteTitle":"Derek Sivers","siteHash":"4098504c0d0759e13901f29e63f7d7dbb1d972a078c6dc4560660f373da5c25e","entryHash":"05ba131d5324b1ae54a8579c05093170ffa4cbe66a559584ce052777cc18f2f1","category":"default"}